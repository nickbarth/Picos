pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
-- init

function _init()	
		poke(0x5f2c, 3)
  debug=""
  
  game_init()
end

function _update()
 step+=1
 game_update()
end

function _draw()
  cls()
  map(0,0,0,0,32,8)
  game_draw()
  
  print(debug)
end

-->8
-- menu
-->8
-- game

function game_init()
  step=0
  gravity=0.3
  friction=0.85
  cam={x=0,y=0}
  
  snail_init()
end

function game_update()
  player_update()
  axe_update()
  snail_update()
end

function game_draw()
  player_draw()
  axe_draw()
  snail_draw()
end
-->8
-- player

player = {
  f=1,
  cf=0,
  x=0,
  y=48,
  dx=0,
  dy=0,
  max_dx=2,
  max_dy=3,
  accl=0.3,
  boost=3,
  jumping=false
}

function player_update()
  player.dy+=gravity
  player.dx*=friction
  
  if btn(‚¨ÖÔ∏è) then
    player.dx-=player.accl
  elseif btn(‚û°Ô∏è) then
    player.dx+=player.accl
  end
    
  -- jump
  if (btnp(‚¨ÜÔ∏è) or btnp(üÖæÔ∏è))
   and not player.jumping then
    player.dy-=player.boost
    player.jumping=true
  end
  
  -- attack
  if btnp(‚ùé) then
    add_axe()    
  end
  
  -- apply movement
  player.x+=player.dx
  player.y+=player.dy
  
  if player.x<cam.x then
    player.x=cam.x
    player.dx=0
  end
  
  --camera
  if player.x-cam.x>16 then
    cam.x+=player.dx
  end
  camera(cam.x,cam.y)
  
  -- frames
  if player.jumping then
    player.f=1
    player.cf=0
  elseif btn(‚ùé) then
    player.f=3
    player.cf=0
  elseif abs(player.dx) < 1 then
    player.f=2
    player.cf=0
  else
    player.f=1
    if step%3==0 then
      player.cf=(player.cf+1)%2
    end
  end
  
  -- ground
  if player.y > 48 then
    player.y=48
    player.dy=0
    player.jumping=false
  end
end

function player_draw()
  spr(player.f+player.cf, player.x, player.y)
end

-->8
-- axe
axes={}
axe_limit=2
  
function add_axe()  
  -- limit axes
  if count(axes) >= axe_limit then
    return
  end
  
  axe={
    f=43,
    cf=0,
    x=player.x,
    y=player.y,
    dx=player.dx/1.2,
    dy=0,
    angle=0.10
  }
  
  add(axes,axe)
end

function axe_update()
  for axe in all(axes) do
    
    -- axe movemovement
    axe.y+=sin(axe.angle)*2
    axe.x+=1+axe.dx

    -- trajectory
    if axe.angle < 0.80 then
     axe.angle+=0.05
    end
    
    -- animation
    if step % 3 == 0 then
      axe.cf=(axe.cf+1)%4
    end
    
    -- remove axe
    if axe.y > 64 then
      del(axes, axe)
    end
		end
end

function axe_draw()
	 for axe in all(axes) do
 	  spr(axe.f+axe.cf, axe.x, axe.y)
 	end
end
-->8
-- snail
snails={}

function add_snail(x,y)
  snail={
    f=17,
    cf=0,
    x=x,
    y=y,
  }	
  
  add(snails,snail)
end

function snail_init()
  for y=0,8 do
    for x=0,8 do
      if mget(x,y) == 17 then
        add_snail(x*8,y*8)
        mset(x,y,25) -- grass
      end
    end
  end
end

function snail_update()

end

function snail_draw()
  for snail in all(snails) do
    spr(snail.f+snail.cf,snail.x,snail.y)
    debug=snail.x
  end
end
__gfx__
000000000aaaaaa00aaaaaa000000000333333330044999999994400ccccccccb333333bb333333bb333333b0003300000000000000000000000000000000000
00000000aaaaaaa0aaaaaaa00aaaaaa0bb9bb9bb0044999999994400cccccccc333bbbb33bbbbbb33bbbb3330033330000000000000000000000000000000000
00700700aaafcf00aaafcf00aaaaaaa0b999999b0044999999994400cccccccc33bbbbbbbbbbbbbbbbbbbb330999999000000000000000000000000000000000
00077000aaffcf00aaffcf00aaafcf00999999990044999999994400cccccccc3bbbbbbbbbbbbbbbbbbbbbb30999999000000000000000000000000000000000
000770000ffffe000ffffe00aaffcf00944444490044999999994400cccccccc3bbbbbbbbbbbbbbbbbbbbbb30099990000000000000000000000000000000000
00700700fffffff00ffff0000ffffe00444444440044999999994400cccccccc3bbbbbbbbbbbbbbbbbbbbbb30099990000000000000000000000000000000000
000000000333300003f3300003333ff0444444440044999999994400cccccccc3bbbbbbbbbbbbbbbbbbbbbb30009900000000000000000000000000000000000
00000000f0000f000f00f0000f00f000444444440044999999994400ccccccccb3bbbbbbbbbbbbbbbbbbbb3b0000000000000000000000000000000000000000
bbbbbbbb000000000000000006666660000000004444999999994444c333333cb3bbbbbbbbbbbbbbbbbbbb3bb333333bb333333bb333333b0000000000000000
333333330000000000000000677777760066660044449999999944443bbbbbb33bbbbbbbbbbbbbbbbbbbbbb33333333333333333333333330000000000000000
39999993000000000008888067777776067777604444999999994444bbbbbbbb3bbbbbbbbbbbbbbbbbbbbbb33333333333333333333333330000000000000000
99999999000888800028222867777776067777604444999999994444bbbbbbbb3bbbbbbbbbbbbbbbbbbbbbb33333333333333333333333330000000000000000
94444449208822280282888867777776067777604444999999994444bbbbbbbb3bbbbbbbbbbbbbbbbbbbbbb33333333333333333333333330000000000000000
44444444028288880282828867777776067777604444999999994444bbbbbbbb3bbbbbbbbbbbbbbbbbbbbbb33333333333333333333333330000000000000000
4444444402828288ff82282867777776006666004444999999994444bbbbbbbb3bbbbbbbbbbbbbbbbbbbbbb33333333333333333333333330000000000000000
44444444ff822828ff88888806666660000000004444999999994444bbbbbbbbb3bbbbbbbbbbbbbbbbbbbb3b3333333b3333333b3333333b0000000000000000
00000000003333000033330000000000000000004449999999999444b333333bb3bbbbbbbbbbbbbbbbbbbb3b0006000000006000000000000000000000000000
055555500323333003233330000000000000000044499999999994443bbbbbb33bbbbbbbbbbbbbbbbbbbbbb30066600000066600005000000000050000000000
566666650833333008333330000000000006600044499999999994443bbbbbb33bbbbbbbbbbbbbbbbbbbbbb30666660000666660055506000060555000000000
566666650003333000033330000000000067760044499999999994443bbbbbb33bbbbbbbbbbbbbbbbbbbbbb36666500000056666005556600665550000000000
566666650033300000333000000000000067760044499999999994443bbbbbb33bbbbbbbbbbbbbbbbbbbbbb30665550000555660000566666666500000000000
366666630333000003330000000000000006600044499999999994443bbbbbb333bbbbbbbbbbbbbbbbbbbb330060555005550600006666600666660000000000
336666330333033303333300000000000000000044499999999994443bbbbbb3333bbbbbbbbbbbbbbbbbb3330000050000500000000666000066600000000000
33333333003333300033333300000000000000004449999999999444b333333b3333333333333333333333330000000000000000000060000006000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000dddd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000055dd5500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000dddddd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000ddeedd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000ddeedd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000dddddd00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000d0dd0d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0909190a19190819190819191909080707070707070707070707070707070707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1919191919191919191919191919190707070707070707070707070707070707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
282928282a2a181a282829292a2a2a0707070707070707070707070707070707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1516071516071516070715160707070707070707070707070707070707070707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1516071516071516070715160707070707070707070707070707070707070707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1516171516171516171715161717170909090909090909090909090909090909000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
2116191516111520191915161919191919111919191919191919191919311919000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1010101010101010101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
